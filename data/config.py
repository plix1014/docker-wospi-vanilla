# CONFIGURATION FILE FOR WOSPi (distribution)
# (C) 2017 - Torkel M. Jodalen <tmj@bitwrap.no>
# http://www.annoyingdesigns.com/wospi/



# ----- START: COMMUNICATION PARAMETERS -----

# Serial port / device name.
WXPORT = '/dev/ttyAMA0'

# WXBAUDRATE = 9600 # leave this line commented out UNLESS you have an old console with a default baudrate of 9600 


# Number of "wakeup calls" to the console before giving up (Davis recommends three attempts).
MAXATTEMPTS = 3

# ------ END: COMMUNICATION PARAMETERS ------




# ----- START: CONSOLE-RELATED SETTINGS -----

# Set to True for Vantage Pro2 firmware >= 1.90, false to force old-style LOOP packet.
# LPS = True is required for APRS weather-report generation and Weather Underground updates.
LPS = True

# Correction factors for the UV and solar radiation sensors.
# Valid range: [50.0, 150.0]. Default = 100.0 (retain 100% of the sensor reading).
# Set UVCF = 0 if UV radiation sensor not installed. Set SOLARCF = 0 if solar radiation sensor not installed.
UVCF = 100.0
SOLARCF = 100.0

# Set INCHES to True if using a console not reporting ET and RAIN values in mm
# Note: Due to lack of a US-type console, this functionality has NOT been tested/verified.
#       It is based on the official Davis documentation only.
INCHES = False

# ------ END: CONSOLE-RELATED SETTINGS ------




# ----- START: VARIOUS SETTINGS -----

# Setting DEBUG = True will produce various *.debug.txt files in the TMPPATH folder. 
DEBUG = False

# Commission date. Set to 1st of the first FULL month of a WORKING WOSPi operation. Date format: strictly dd.mm.yyyy.
# Used to indicate start of rainfall data recording in rainfall histograms.
COMMISSIONDATE = '01.01.2013'

# Rain threshold - rainfall at or below this value will *not* be counted as a rainy day.
# Readings of 0.2 mm / 0.01 in are often caused by condensation in the rain collector.
RAINTHRESHOLD_MM = 0.2
RAINTHRESHOLDTEXT = '0.2 mm'  # textual representation - include mm or in/" as required - will appear in the plot

# Set to True to generate APRS weather report for use with UIView (etc.)
APRS = False

# Weather Underground (wunderground) username (WU_USER) and password (WU_PASS).
# Set WU_USER to an empty string ('') to disable uploads to Weather Underground.
# Requires LOOP2 packets (LPS = True).
WU_USER = ''
WU_PASS = ''

# WindGutu station ID. Set WG_UID to empty string ('') to disable uploads to WindGURU.
# Refer to www.windguru.cz for details.
WG_UID = ''

# WindFinder.com login credentials. Set WF_StationID to empty string ('') to disable uploads to WindFinder.
# Refer to www.windfinder.com for details.
WF_StationID = ''
WF_Password  = ''

# weathercloud.net login credentials. Set WC_ID to empty string ('') to disable uploads to weathercloud.net.
WC_ID = ''
WC_KEY = ''


# Update interval (minutes) for the CSV file (archive of weather observations).
# This interval is also used for the APRS weather report and for updating the 24-hour data plots
# and monthly rainfall histograms as well as for triggering the runNotSoOften() function below.
# Min/max values are also retrieved from the console at this interval.
CSVINTERVAL = 10


# Your location - city/country description for various reports.
MYLOCATION = 'Somewhere, Elsewhere'

# Your geographical position - latitude and longitude for various reports.
# Note 1: Use an asterisk (*) to indicate DEGREES.
# Note 2: This position is used only for weather reports and is NOT transferred to the console.
MYPOSITION = 'N 59*00.000\'  E 010*00.000\''

# Title to appear in header of textual weather reports
REPORTTITLE = 'DATA FROM THE DAVIS VANTAGE PRO2 PLUS WEATHER STATION'

# Title to appear on the 24-hour data plot generated by gnuplot.
PLOT24TITLE = '24-HOUR DATA PLOTS from %s' % MYLOCATION

# Title to appear on the 24-hour wind data plot generated by gnuplot.
PLOT24WINDTITLE = '24-HOUR WIND DATA PLOTS from %s' % MYLOCATION

# Title to appear on the monthly rain data plot generated by gnuplot.
PLOTRAINMONTHTITLE = 'RAINFALL/SNOWMELT LAST MONTH at %s' % MYLOCATION

# Title to appear on the plot of rainy days per month generated by gnuplot.
PLOTRAINDAYSPERMONTHTITLE = 'RAINY DAYS PER MONTH at %s' % MYLOCATION

# Title to appear on the plot of rainfall per month generated by gnuplot.
PLOTRAINPERMONTHTITLE = 'RAINFALL/SNOWMELT PER MONTH at %s' % MYLOCATION

# Title to appear on the plot of min/max temperatures for the last 12 months
PLOTMINMAXTITLE = 'MINIMUM and MAXIMUM TEMPERATURES at %s' % MYLOCATION

# Title to appear on the max solar/uv radiation plot for the last 12 months
PLOTSOLARTITLE = 'DAILY MAX UV and MAX SOLAR RADIATION at %s' % MYLOCATION

# Title to appear on the plot of max temperature and max solar radiation for the last 12 months
PLOTTEMPSOLARTITLE = 'DAILY MAX TEMPERATURE and MAX SOLAR RADIATION at %s' % MYLOCATION

# Title to appear on the one-week plot of barometric pressure data
PLOTBAROWEEKTITLE = 'ONE WEEK OF BAROMETRIC PRESSURE DATA from %s' % MYLOCATION


# Maximum line length for the textual report of current weather observations.
LL = 75

# Wind chill reporting - cutoff temperature in degrees C
# Above this temperature, THSW index will be reported instead of WC
WC_CUTOFF_C = 10

# ------ END: VARIOUS SETTINGS ------




# ----- START: PATH and COMMAND SETTINGS -----

# Note 1: ALWAYS INCLUDE TRAILING FORWARD-SLASH (/) IN THE PATH DEFINITIONS !
# Note 2: On the BeagleBone, use PATH /var/volatile/... for temporary files.
# Note 3: To omit an SCP file copy operation, simply set the command string to an empty string ('').

# Where to store the CSV files (archive of weather observations).
# Refer to note 1 above.
CSVPATH       = '/csv_data/'

# Where to store temporary files (should be in volatile memory).
# Refer to note 1 above.
TMPPATH       = '/var/tmp/'

# ******************** START: DO NOT MAKE CHANGES INSIDE THIS SECTION ********************
OUTFILE          = TMPPATH + 'wxdata.txt'            # DO NOT MODIFY THIS LINE ! 
XMLFILE          = TMPPATH + 'wxdata.xml'            # DO NOT MODIFY THIS LINE ! 
MINMAXFILE       = TMPPATH + 'minmax.txt'            # DO NOT MODIFY THIS LINE ! 
UIFILE           = TMPPATH + 'uiview.txt'            # DO NOT MODIFY THIS LINE ! 
ICONFILE         = TMPPATH + 'icon.html'             # DO NOT MODIFY THIS LINE ! 
PLOT24FILE       = TMPPATH + 'wx_24hr.png'           # DO NOT MODIFY THIS LINE ! 
PLOT24WIND       = TMPPATH + 'wind_24hr.png'         # DO NOT MODIFY THIS LINE ! 
PLOTRAINMONTH    = TMPPATH + 'plotraindays.png'      # DO NOT MODIFY THIS LINE ! 
PLOTRAINDMONTH   = TMPPATH + 'monthlyraindays.png'   # DO NOT MODIFY THIS LINE ! 
PLOTRAINPERMONTH = TMPPATH + 'monthlyrain.png'       # DO NOT MODIFY THIS LINE ! 
PLOTMINMAXTEMP   = TMPPATH + 'plotminmax.png'        # DO NOT MODIFY THIS LINE ! 
PLOTSOLAR        = TMPPATH + 'plotsolar.png'         # DO NOT MODIFY THIS LINE ! 
PLOTTEMPSOLAR    = TMPPATH + 'plottempsolar.png'     # DO NOT MODIFY THIS LINE ! 
PLOTANNUALWIND   = TMPPATH + 'wind_annual.png'       # DO NOT MODIFY THIS LINE ! 
PLOTBAROWEEK     = TMPPATH + 'baroweek.png'          # DO NOT MODIFY THIS LINE ! 
BATTERYLOGFILE   = TMPPATH + 'battery.log'           # DO NOT MODIFY THIS LINE ! 
TEMPERATUREFILE  = TMPPATH + 'temperature.log'       # DO NOT MODIFY THIS LINE ! 
CSVFILESUFFIX    = 'wxdata.csv'                      # DO NOT MODIFY THIS LINE ! 
# ********************* END: DO NOT MAKE CHANGES INSIDE THIS SECTION *********************



# Home folder of the wospi user (on the local file system).
# Refer to note 1 above.
HOMEPATH      = '/home/wospi/'

# SCP target - e.g. johndoe@scp.johndoeserver.com:/home/johndoe/www/
SCPTARGET = 'myUserName@myServer:myHome'

# command for scp transfer
# the 'fscp' is actually a wrapper for lftp with the same command args as scp
# scp  ... use scp
# fscp ... use lftp; needs a .netrc mountend into the container
SCP       = 'fscp'



# TIMEOUT prefix for SCP shell commands. Set to empty string ('') for no timeout command.
# Requires the coreutils package.
TIMEOUT = 'timeout --kill-after=8s 5s ' # NOTE: trailing space in this string!

# SCP command to upload the textual weather report. Refer to note 3 above.
SCPCOMMAND_WX = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, OUTFILE, SCPTARGET) 

# SCP command to upload the XML weather report. Refer to note 3 above.
SCPCOMMAND_XML = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, XMLFILE, SCPTARGET)

# SCP command to upload the min/max textual report. Refer to note 3 above.
SCPCOMMAND_MINMAX = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, MINMAXFILE, SCPTARGET)

# SCP command to upload the weather icon include file. Refer to note 3 above.
# Icon files are available from the WOSPi download site at www.annoyingdesigns.com/wospi.
SCPCOMMAND_ICON = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, ICONFILE, SCPTARGET)

# SCP command to upload the APRS weather report file (not used if APRS = False). Refer to note 3 above.
SCPCOMMAND_UIFILE = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, UIFILE, SCPTARGET)

# SCP command to upload the 24-hour weather data plot. Refer to note 3 above.
SCPCOMMAND_PLOT24FILE = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOT24FILE, SCPTARGET)

# SCP command to upload the 24-hour wind data plot. Refer to note 3 above.
SCPCOMMAND_PLOT24WIND = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOT24WIND, SCPTARGET)

# SCP command to upload the monthly rain histogram. Refer to note 3 above.
SCPCOMMAND_PLOTRAINMONTH = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTRAINMONTH, SCPTARGET)

# SCP command to upload the rainy days per month  histogram. Refer to note 3 above.
SCPCOMMAND_PLOTRAINDMONTH = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTRAINDMONTH, SCPTARGET)

# SCP command to upload the rain days per month  histogram. Refer to note 3 above.
SCPCOMMAND_PLOTRAINPERMONTH = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTRAINPERMONTH, SCPTARGET)

# SCP command to upload the 12-month min/max temperature plot. Refer to note 3 above.
SCPCOMMAND_PLOTMINMAXTEMP = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTMINMAXTEMP, SCPTARGET)

# SCP command to upload the 12-month min/max temperature plot. Refer to note 3 above.
SCPCOMMAND_PLOTSOLAR = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTSOLAR, SCPTARGET)

# SCP command to upload the 12-month max temperature/solar radiation plot. Refer to note 3 above.
SCPCOMMAND_PLOTTEMPSOLAR = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTTEMPSOLAR, SCPTARGET)

# SCP command to upload the 12-month wind direction plot. Refer to note 3 above.
SCPCOMMAND_PLOTANNUALWIND = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTANNUALWIND, SCPTARGET)

# SCP command to upload the one-week barometric pressure data plot. Refer to note 3 above.
SCPCOMMAND_PLOTBAROWEEK = '%s%s -o ConnectTimeout=12 %s %s' % (TIMEOUT, SCP, PLOTBAROWEEK, SCPTARGET)

# Set to True to manually force an NTP time update if NTPD is not running on your system,
# date/time will then be updated at program start-up.
# DO NOT set to True if NTPD is running (default on the Raspberry Pi).
FORCENTP = False

# NTP time update command to run if FORCENTP = True. You probably don't want to use no.pool.ntp.org
# as your NTP server, so change it to something which makes sense in your corner of the world.
# Ref. http://www.pool.ntp.org/en/
NTPCOMMAND = 'sudo /etc/init.d/ntp stop; sudo ntpdate no.pool.ntp.org; sudo /etc/init.d/ntp start'

# Command to read SoC temperature, set to blank string ('') if option not desired
TEMPERATURECOMMAND = 'sudo /usr/bin/vcgencmd measure_temp | cut -d "=" -f2 | cut -d "\'" -f1 > ' + TEMPERATUREFILE

# System reboot command. Set to an empty string ('') if the system should never reboot itself automatically.
REBOOTCOMMAND = 'sudo shutdown -r now'

# Reboot the system after this number of communication sessions with the console.
# The normal number of sessions per day is 2880. A value of 100000 equals 34.7 days.
REBOOTINTERVAL = 100000

# ------ END: PATH and COMMAND SETTINGS ------




# ----- START: BEAUFORT WIND SCALE -----

# Norwegian language Beaufort scale
NObeaufortText = {
 0 : 'Stille', 
 1 : 'Flau vind',
 2 : 'Svak vind',
 3 : 'Lett bris',
 4 : 'Laber bris',
 5 : 'Frisk bris',
 6 : 'Liten kuling',
 7 : 'Stiv kuling',
 8 : 'Sterk kuling',
 9 : 'Liten storm',
10 : 'Full storm',
11 : 'Sterk storm',
12 : 'Orkan'
}

# Dutch language Beaufort scale
DUbeaufortText = {
 0 : 'Stil', 
 1 : 'Zwak',
 2 : 'Zwak',
 3 : 'Matig',
 4 : 'Matig',
 5 : 'Vrij krachtig',
 6 : 'Krachtig',
 7 : 'Hard',
 8 : 'Stormachtig',
 9 : 'Storm',
10 : 'Zware storm',
11 : 'Zeer zware storm',
12 : 'Orkaan'
}

# Catalan language Beaufort scale
CAbeaufortText = {
 0 : 'Calma',
 1 : 'Ventolina',
 2 : 'Vent fluixet',
 3 : 'Vent fluix',
 4 : 'Vent moderat',
 5 : 'Vent fresquet',
 6 : 'Vent fresc',
 7 : 'Vent fort',
 8 : 'Temporal',
 9 : 'Temporal fort',
10 : 'Temporal molt fort',
11 : 'Temporal violent',
12 : 'Huraca'
}

# Spanish language Beaufort scale
ESbeaufortText = {
 0 : 'Calma', 
 1 : 'Ventolina',
 2 : 'Muy flojo',
 3 : 'Flojo',
 4 : 'Bonacible',
 5 : 'Fresquito',
 6 : 'Fresco',
 7 : 'Frescachon',
 8 : 'Duro',
 9 : 'Muy duro',
10 : 'Temporal',
11 : 'Borrasca',
12 : 'Huracan'
}

# German language Beaufort scale
#  http://de.wikipedia.org/wiki/Beaufortskala
GEbeaufortText = {
 0 : 'Windstille,Flaute',
 1 : 'leiser Zug',
 2 : 'leichte Brise',
 3 : 'schwache Brise',
 4 : 'maessige Brise',
 5 : 'frische Brise',
 6 : 'starker Wind',
 7 : 'steifer Wind',
 8 : 'stuermischer Wind',
 9 : 'Sturm',
10 : 'schwerer Sturm',
11 : 'orkanartiger Sturm',
12 : 'Orkan'
}


# Uncomment ONE of the below lines if a localized Beaufort description of the wind speed is desired.
# NObeaufortText contains the Norwegian language descriptions of the Beaufort scale. 
# DUbeaufortText contains the Dutch language descriptions of the Beaufort scale. 
# CAbeaufortText contains the Catalan language descriptions of the Beaufort scale. 
# ESbeaufortText contains the Spanish language descriptions of the Beaufort scale. 
# Feel free to  make your own local-language variant. Refer to the WOSPi documentation for details 
# and make sure that you DO NOT CHANGE the dictionary KEYS [0,12].

# beaufortText = NObeaufortText  # Norwegian
# beaufortText = DUbeaufortText  # Dutch
# beaufortText = CAbeaufortText  # Catalan
# beaufortText = ESbeaufortText  # Spanish 
# beaufortText = GEbeaufortText  # German

# ------ END: BEAUFORT WIND SCALE ------




# ----- START: USER-DEFINED FUNCTIONS -----

def runOften():
    """This (blocking) function is run every 30 seconds."""
    """If you intend to perform any time-consuming operations, consider starting a new thread from here on."""

    import wxshared

    # to access wxDict values, use wxshared.wxDict['key'}
    # to access wxMinMax values, use wxshared.wxMinMax['key']

    return 0


def runNotSoOften():
    """This (blocking) function is run at the interval specified by the CSVINTERVAL interval."""
    """If you intend to perform any time-consuming operations, consider starting a new thread from here on."""

    import wxshared

    # to access wxDict values, use wxshared.wxDict['key'}
    # to access wxMinMax values, use wxshared.wxMinMax['key']

    return 0

# ------ END: USER-DEFINED FUNCTIONS ------
